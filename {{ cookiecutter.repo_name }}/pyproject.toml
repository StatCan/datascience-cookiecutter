[build-system]
requires = ["setuptools>=64", "wheel", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.__pypkg }}"
# Add brief project description
description = "My package description"
readme = "README.md"
keywords = ["one", "two"]
license = {text = "MIT"}
# Set the minimum version of Python required to run the code
requires-python = ">=3.10"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]
# Update and version pin all runtime dependencies
dependencies = [
    "fastapi>=0.95.1",
    "typer>=0.7.0"
]

# Set any development related dependencies here
[project.optional-dependencies]
tests = [
    "httpx",
    "pytest",
    "pytest-cov",
    "requests",
    "sphinx",
    "sphinx-intl",
    "myst-parser",
    "sphinx-autoapi",
]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

# Setuptools_scm will create the version based on git tags
[tool.setuptools_scm]
write_to = "src/{{ cookiecutter.__pypkg }}/_version.py"

[tool.pytest.ini_options]
pythonpath = [ "src" ]

[tool.ruff]
# Exclude some directories from processing
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    "venv",
]

# Same settings as Black
line-length = 88
indent-width = 4

# Python 3.10 is the current corporate standard
target-version = "py310"

[tool.ruff.lint]
# Which rules to turn on
select = ["F", "E", "W", "C", "I", "N", "D", "YTT", "ANN", "BLE", "B", "A", "PTH", "PD"]
# Selectively ignore specific rules (some rules conflict)
ignore = ["D203", "D211", "D212", "PD901"]

# Try to fix all enabled rules
fixable = [ "ALL" ]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.mccabe]
max-complexity = 9

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
